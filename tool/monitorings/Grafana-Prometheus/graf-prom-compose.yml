version: '3.4'

volumes:
  prometheus_data:
  grafana_data:

services:
  prometheus:
    image: prom/prometheus:latest
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.aka == Logging]
      labels:
        - org.label-schema.group=monitoring
        - traefik.enable=true
        - traefik.docker.network=traefik_network
        - traefik.http.routers.statics.entrypoints=websecure
        - traefik.http.routers.statics.tls=true
        - traefik.http.routers.statics.rule=Host(`prometheus.example.io`)
        - traefik.http.services.statics.loadbalancer.server.port=9090
    volumes:
      - /var/docker_volumes/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitor-net
      - traefik_network

  alertmanager:
    image: prom/alertmanager:latest
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.aka == Logging]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_network
        - traefik.http.routers.statics.entrypoints=websecure
        - traefik.http.routers.statics.tls=true
        - traefik.http.routers.statics.rule=Host(`alertmanager.example.io`)
        - traefik.http.services.statics.loadbalancer.server.port=9093
        - org.label-schema.group=monitoring
    volumes:
      - /var/docker_volumes/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitor-net
      - traefik_network

  nodeexporter:
    image: prom/node-exporter:latest
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.aka == Logging]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_network
        - traefik.http.routers.statics.entrypoints=websecure
        - traefik.http.routers.statics.tls=true
        - traefik.http.routers.statics.rule=Host(`nodeexporter.example.io`)
        - traefik.http.services.statics.loadbalancer.server.port=9100
        - org.label-schema.group=monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - traefik_network
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.aka == Logging]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_network
        - traefik.http.routers.statics.entrypoints=websecure
        - traefik.http.routers.statics.tls=true
        - traefik.http.routers.statics.rule=Host(`grafana.example.io`)
        - traefik.http.services.statics.loadbalancer.server.port=3000
        - org.label-schema.group=monitoring
    volumes:
      - grafana_data:/var/lib/grafana
      - /var/docker_volumes/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitor-net
      - traefik_network

  pushgateway:
    image: prom/pushgateway:latest
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.aka == Logging]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_network
        - traefik.http.routers.statics.entrypoints=websecure
        - traefik.http.routers.statics.tls=true
        - traefik.http.routers.statics.rule=Host(`pushgateway.example.io`)
        - traefik.http.services.statics.loadbalancer.server.port=9091
        - org.label-schema.group=monitoring
    networks:
      - monitor-net
      - traefik_network

networks:
  monitor-net:
    external: true
    name: "monitor-net"
  traefik_network:
    external: true
    name: "traefik_network"
